version: 0.1
cli:
  version: 1.22.8
plugins:
  sources:
    - id: trunk
      ref: v1.6.6
      uri: https://github.com/trunk-io/plugins
tools:
  enabled:
    - yq@4.44.6
  definitions:
    - name: yamlfmt
      runtime: go
      package: github.com/google/yamlfmt/cmd/yamlfmt
      shims: [yamlfmt]
      known_good_version: 0.14.0
runtimes:
  enabled:
    - go@1.21.0
    - node@18.20.5
    - python@3.10.8
lint:
  disabled:
    - shellcheck
  files:
    - name: compose-yaml
      filenames: [compose.yaml, docker-compose.yaml]
  enabled:
    - hadolint@2.12.1-beta
    - shfmt@3.6.0
    - osv-scanner@1.9.1
    - prettier@3.4.2
    - taplo@0.9.3
    - checkov@3.2.334
    - git-diff-check
    - trivy@0.58.0
    - trufflehog@3.86.1
    - composefmt
    - yamlfmt
    - yamllint@1.35.1
  definitions:
    - name: yamlfmt
      files: [yaml]
      tools: [yamlfmt]
      description: A formatter for YAML code
      direct_configs:
        - .yamlfmt
        - yamlfmt.yml
        - yamlfmt.yaml
        - .yamlfmt.yaml
        - .yamlfmt.yml
      commands:
        - name: format
          output: rewrite
          run: yamlfmt ${target}
          success_codes: [0]
          cache_results: true
          formatter: true
          in_place: true
          batch: false
          allow_empty_files: false
      suggest_if: files_present
      # go releases are not auto-queriable with our current setup, so we will bump this fixed version from time to time
      # known_good_version: 0.14.0
    - name: composefmt
      files: [compose-yaml]
      commands:
        - name: format
          output: rewrite
          run: |-
            yq -i '.services[] |= pick( ([
              "build",
              "image",
              "container_name",
              "user",
              "profiles",
              "privileged",
              "security_opt",
              "cap_add",
              "sysctls",
              "environment",
              "env_file",
              "secrets",
              "shm_size",
              "hostname",
              "networks",
              "network_mode",
              "ports",
              "volumes",
              "devices",
              "depends_on",
              "restart",
              "command",
              "healthcheck"
            ] + keys) | unique )' ${target}
          success_codes: [0]
          cache_results: true
          in_place: true
          formatter: true
          batch: false
      tools: [yq]
      suggest_if: files_present
actions:
  enabled:
    - trunk-announce
    - trunk-check-pre-push
    - trunk-fmt-pre-commit
    - trunk-upgrade-available # This is the section where you manage your linters. (https://docs.trunk.io/check/configuration)

# This file controls the behavior of Trunk: https://docs.trunk.io/cli# To learn more about the format of this file, see https://docs.trunk.io/reference/trunk-yaml# Many linters and tools depend on runtimes - configure them here. (https://docs.trunk.io/runtimes)# Trunk provides extensibility via plugins. (https://docs.trunk.io/plugins)
