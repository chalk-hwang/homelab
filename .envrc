export PROJECT_ROOT="$(expand_path ./)"
export SECRETSPATH="$PROJECT_ROOT/secrets"
export APPSPATH="$PROJECT_ROOT/apps"
export STORAGE_ROOT="$HOME/storage"
export DATAPATH="$STORAGE_ROOT/data"
export LOGSPATH="$STORAGE_ROOT/logs"

# This is my current / up-to-date list of bash aliases.
# This is the exact same file that is on all of my hosts - synced using Synthing.

# Rename shared/config/bash_aliases.env.example and use it as a starter

# SOURCE ENVIRONMENTAL VARIABLES FOR BASH_ALIASES
# if [[ -f "$HOME/docker/shared/config/bash_aliases.env" ]]; then
#   source $HOME/docker/shared/config/bash_aliases.env 
# fi 

# DOCKER - All Docker commands start with "d" AND Docker Compose commands start with "dc"
# export_alias dstop 'sudo docker stop $(sudo docker ps -a -q)' # usage: dstop container_name
# export_alias dstopall 'sudo docker stop $(sudo docker ps -aq)' # stop all containers
# export_alias drm 'sudo docker rm $(sudo docker ps -a -q)' # usage: drm container_name
# export_alias dprunevol 'sudo docker volume prune' # remove unused volumes
# export_alias dprunesys 'sudo docker system prune -a' # remove unsed docker data
# export_alias ddelimages 'sudo docker rmi $(sudo docker images -q)' # remove unused docker images
# export_alias derase 'dstopcont ; drmcont ; ddelimages ; dvolprune ; dsysprune' # WARNING: removes everything! 
# export_alias dprune 'ddelimages ; dprunevol ; dprunesys' # remove unused data, volumes, and images (perfect for safe clean up)
# export_alias dexec 'sudo docker exec -ti' # usage: dexec container_name (to access container terminal)
# export_alias dps 'sudo docker ps -a' # running docker processes
# export_alias dpss 'sudo docker ps -a --format "table {{.Names}}\t{{.State}}\t{{.Status}}\t{{.Image}}" | (sed -u 1q; sort)' # running docker processes as nicer table
# export_alias ddf 'sudo docker system df' # docker data usage (/var/lib/docker)
# export_alias dlogs 'sudo docker logs -tf --tail="50" ' # usage: dlogs container_name
# export_alias dlogsize 'sudo du -ch $(sudo docker inspect --format='{{.LogPath}}' $(sudo docker ps -qa)) | sort -h' # see the size of docker containers
# export_alias dips "sudo docker ps -q | xargs -n 1 sudo docker inspect -f '{{.Name}}%tab%{{range .NetworkSettings.Networks}}{{.IPAddress}}%tab%{{end}}' | sed 's#%tab%#\t#g' | sed 's#/##g' | sort | column -t -N NAME,IP\(s\) -o $'\t'"
# export_alias dcrun 'sudo docker compose --profile all '

# export_alias dclogs 'dcrun logs -tf --tail="50" ' # usage: dclogs container_name
# export_alias dcup 'dcrun up -d --build --remove-orphans' # up the stack
# export_alias dcdown 'dcrun down --remove-orphans' # down the stack
# export_alias dcrec 'dcrun up -d --force-recreate --remove-orphans' # usage: dcrec container_name
# export_alias dcstop 'dcrun stop' # usage: dcstop container_name
# export_alias dcrestart 'dcrun restart ' # usage: dcrestart container_name
# export_alias dcstart 'dcrun start ' # usage: dcstart container_name
# export_alias dcpull 'dcrun pull' # usage: dcpull to pull all new images or dcpull container_name
# export_alias traefiklogs 'tail -f $HOME/docker/logs/$HOSTNAME/traefik/traefik.log' # tail traefik logs

# # Manage "core" services as defined by profiles in docker compose
# export_alias startcore 'sudo docker compose --profile core -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml start'
# export_alias createcore 'sudo docker compose --profile core -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml up -d --build --remove-orphans'
# export_alias stopcore 'sudo docker compose --profile core -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml stop'
# # Manage "media" services as defined by profiles in docker compose
# export_alias stopmedia 'sudo docker compose --profile media -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml stop'
# export_alias createmedia 'sudo docker compose --profile media -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml up -d --build --remove-orphans'
# export_alias startmedia 'sudo docker compose --profile media -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml start'
# # Manage "diwkiads" services as defined by profiles in docker compose
# export_alias stopdownloads 'sudo docker compose --profile downloads -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml stop'
# export_alias createdownloads 'sudo docker compose --profile downloads -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml up -d --build --remove-orphans'
# export_alias startdownloads 'sudo docker compose --profile downloads -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml start'
# # Manage Starr apps as defined by profiles in docker compose
# export_alias stoparrs 'sudo docker compose --profile arrs -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml stop'
# export_alias startarrs 'sudo docker compose --profile arrs -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml start'
# export_alias createarrs 'sudo docker compose --profile arrs -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml up -d --build --remove-orphans'
# # Manage "dbs" (database) services as defined by profiles in docker compose
# export_alias stopdbs 'sudo docker compose --profile dbs -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml stop'
# export_alias createdbs 'sudo docker compose --profile dbs -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml up -d --build --remove-orphans'
# export_alias startdbs 'sudo docker compose --profile dbs -f $PRESETS_DIR/$PROJECT_NAME/compose.yaml start'

use asdf
# use oprc